{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about-us/about-us.component.ts","webpack:///src/app/about-us/about-us.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/contact-us/contact-us.component.ts","webpack:///src/app/contact-us/contact-us.component.html","webpack:///src/app/create/create-router.module.ts","webpack:///src/app/create/create-user/create.component.ts","webpack:///src/app/create/create-user/create.component.html","webpack:///src/app/create/create.module.ts","webpack:///src/app/create/user-data/user-data.component.ts","webpack:///src/app/create/user-data/user-data.component.html","webpack:///src/app/create/user-data/user-data.module.ts","webpack:///src/app/home/hero/hero.component.ts","webpack:///src/app/home/hero/hero.component.html","webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/shared/validator.pass.ts","webpack:///src/app/signin/change-pass/change-pass.component.ts","webpack:///src/app/signin/change-pass/change-pass.component.html","webpack:///src/app/signin/forgot/forgot.component.ts","webpack:///src/app/signin/forgot/forgot.component.html","webpack:///src/app/signin/signin-router.module.ts","webpack:///src/app/signin/signin.component.ts","webpack:///src/app/signin/signin.component.html","webpack:///src/app/signin/signin.module.ts","webpack:///src/app/statistics/full-data/full-data.component.ts","webpack:///src/app/statistics/full-data/full-data.component.html","webpack:///src/app/statistics/personal-info/personal-info.component.ts","webpack:///src/app/statistics/personal-info/personal-info.component.html","webpack:///src/app/statistics/statistics-routing.module.ts","webpack:///src/app/statistics/statistics.component.ts","webpack:///src/app/statistics/statistics.component.html","webpack:///src/app/statistics/statistics.module.ts","webpack:///src/app/statistics/stats/stats.component.ts","webpack:///src/app/statistics/stats/stats.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutUsComponent","selector","templateUrl","styleUrls","routes","path","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","sessionStorage","removeItem","getItem","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","loginService","route","showpage","navigate","providedIn","ContactUsComponent","component","CreateRoutingModule","forChild","CreateComponent","lgn","fb","console","log","signupForm","group","name","required","pattern","email","password0","minLength","password","age","gender","validator","markAllAsTouched","valid","value","register","subscribe","res","serverMessage","message","setItem","token","JSON","stringify","get","navigateByUrl","err","aa","submit","CreateModule","UserDataComponent","router","userDataForm","height","weight","waist","neck","hip","ankle","wrist","bType","ecto","meso","endo","bt","q1","q2","q3","q4","q5","q6","q7","q8","guest","isGuest","values","Object","forEach","element","calc_bt","assign","data","datareg","addData","UserDataModule","HeroComponent","routeCheck","url","buttonText","buttonUrl","HomeRoutingModule","HomeComponent","HomeModule","DataService","messageSource","currentMessage","asObservable","next","LoginService","http","regUrl","user","post","patch","TokenInterceptorService","StoredData","tokenizedReq","clone","setHeaders","authorisation","handle","PasswordValidator","control","confirmPassword","misMatch","ChangePassComponent","changeForm","snapshot","queryParams","crypt","changePassword","ForgotComponent","forgotForm","forgot","SigninRoutingModule","SigninComponent","loginForm","login","SigninModule","FullDataComponent","dataService","phy","calc_physi","bfp","g","PersonalInfoComponent","barM","p","per","cal","wt","c","f","calc_bar_maintain","bmr","TotalCal","canActivate","StatisticsRoutingModule","StatisticsComponent","StatisticsModule","StatsComponent","parse","getUserData","bmi","calc_bmi","calc_bmr","calc_bfp_navy","fm","mmn","calc_mmn","lbm","calc_lbm","bTypeMax","calc_btype","changeMessage","x","Math","log10","z","y","pow","sqrt","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section id=\"Aboutus\">\n  <div class=\"bg-black\">   <div class=\"img\"></div>  </div>\n\n  <div class=\"flex\">\n    <div class=\"text\">\n      <h1>About us</h1>\n      <p>We are someone who care for you to provide you everything under single hood.</p>\n    </div>\n    <div class=\"ico\">\n      <ul>\n        <a href=\"\" target=\"\"><li><i class=\"fab fa-instagram\"></i></li></a>\n        <a href=\"\" target=\"\"><li><i class=\"fab fa-facebook-f\"></i></li></a>\n        <a href=\"\" target=\"\"><li><i class=\"fab fa-github\"></i></li></a>\n      </ul>\n    </div>\n  </div>\n</section>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: '/home'},\n  {path: '**', pathMatch: 'full', redirectTo: '/home'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title: string;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.title = 'MuscleMedium';\n  }\n  logout(){\n    sessionStorage.removeItem('token');\n  }\n  istoken(){\n    if (sessionStorage.getItem('token')){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n}\n","<!-- navbar -->\n<nav class=\"navbar navbar-expand-lg navbar-light text-light\">\n  <div class=\"container\">\n  <a class=\"navbar-brand\" href=\"#\"><img class=\"icon\" src=\"../assets/icon.gif\" alt=\"\">{{ title }}</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLinkActive]=\"'bolder text-dark'\" routerLink=\"/home\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLinkActive]=\"'bolder text-dark'\" routerLink=\"/stats\">Statistics</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLinkActive]=\"'bolder text-dark'\" routerLink=\"/nutrition\">Nutrition</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLinkActive]=\"'bolder text-dark'\" routerLink=\"/workout\">Workout</a>\n      </li>\n      <li *ngIf=\"!istoken()\" class=\"nav-item\">\n        <a class=\"nav-link\" [routerLinkActive]=\"'bolder text-dark'\" routerLink=\"/signin\">Login</a>\n      </li>\n      <li *ngIf=\"!istoken()\" class=\"nav-item\">\n        <a class=\"nav-link\" [routerLinkActive]=\"'bolder text-dark'\" routerLink=\"/signup\">Signup</a>\n      </li>\n      <li *ngIf=\"istoken()\" class=\"nav-item\">\n        <a class=\"nav-link\" [routerLinkActive]=\"'bolder text-dark'\" (click)=\"logout()\" routerLink=\"/home\">Logout</a>\n      </li>\n    </ul>\n  </div>\n</div>\n</nav>\n<router-outlet></router-outlet>\n<!--\n<app-home></app-home>\n<app-create></app-create>\n<app-signup></app-signup>\n<app-statistics></app-statistics>\n<app-contact-us></app-contact-us>\n<app-about-us></app-about-us>\n-->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { StatisticsModule } from './statistics/statistics.module';\nimport { SigninModule } from './signin/signin.module';\nimport { CreateModule } from './create/create.module';\n\nimport { AppComponent } from './app.component';\n\n\nimport { TokenInterceptorService } from './services/token-interceptor.service';\n\nimport { AuthGuard } from './auth.guard';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    StatisticsModule,\n    SigninModule,\n    CreateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [ AuthGuard,\n    { provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { LoginService } from './services/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private loginService: LoginService,\n              private  route: Router ) {}\n  canActivate(): boolean{\n    if (this.loginService.showpage()) {\n      return true;\n    }\n    else {\n      this.route.navigate(['/signin']);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.scss']\n})\nexport class ContactUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section id=\"contactus\">\n  <h1>Create your own customized diet plan</h1>\n  <div class=\"form\">\n    <div class=\"form-data\">\n\n    <h2>Feel free to contact us</h2>\n    <p>Connecting you to a laboratory far far away......</p>\n    <form action=\"\">\n      <textarea name=\"\" id=\"\"></textarea>\n      <button>Send Response</button>\n    </form>\n    </div>\n  </div>\n</section>\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateComponent } from './create-user/create.component';\r\nimport { UserDataComponent } from './user-data/user-data.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'signup', component: CreateComponent },\r\n  {path: 'userdata', component: UserDataComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CreateRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PasswordValidator } from 'src/app/shared/validator.pass';\n\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent implements OnInit {\n  serverMessage: string;\n  signupForm: FormGroup;\n  get name(){\n    return this.signupForm.get('name');\n  }\n  get email(){\n    return this.signupForm.get('email');\n  }\n  get pass0(){\n    return this.signupForm.get('password0');\n  }\n  get pass(){\n    return this.signupForm.get('password');\n  }\n  get gender(){\n    return this.signupForm.get('gender');\n  }\n  get age(){\n    return this.signupForm.get('age');\n  }\n  constructor(private lgn: LoginService,\n              private route: Router,\n              private fb: FormBuilder) {\n   }\n   aa(){\n    console.log(this.signupForm);\n  }\n  ngOnInit(): void {\n    this.signupForm = this.fb.group({\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z][a-zA-Z ]+[a-zA-Z]$')]],\n      email: ['', [Validators.required, Validators.pattern('[^@]+@[^@]+\\.[a-zA-Z]{2,6}')]],\n      password0: ['', [Validators.required, Validators.minLength(5)]],\n      password: ['', [Validators.required, Validators.minLength(5)]],\n      age: ['', [Validators.required]],\n      gender: ['', [Validators.required]]\n    }, {validator : PasswordValidator});\n  }\n  submit(){\n    this.signupForm.markAllAsTouched();\n    if (this.signupForm.valid)\n    { delete this.signupForm.value.password0;\n      this.lgn.register(this.signupForm.value)\n       .subscribe(\n         res => {\n                  this.serverMessage = res.message;\n                  sessionStorage.setItem('token', res.token);\n                  sessionStorage.setItem('temp', JSON.stringify({\n                                                                age: this.signupForm.get('age').value,\n                                                                gender: this.signupForm.get('gender').value\n                                                              }));\n                  if (res.token){\n                  this.route.navigateByUrl(`/userdata`);\n                  }\n                 },\n         err => { }\n       );\n    }\n  }\n\n}\n","<section id=\"create\">\n  <div class=\"text-center\">\n    <p>Don't wanna signup continue as <a href=\"/userdata\">Guest</a></p>\n    <h1 (click)=\"aa()\">Create Your Account</h1>\n    <div class=\"user-pass\">\n      <form [formGroup]=\"signupForm\" (ngSubmit)=\"submit()\">\n         <span class=\"text-danger\" *ngIf=\"serverMessage\">{{ serverMessage }}</span>\n\n          <div class=\"input-field\">\n            <input formControlName=\"name\" type=\"text\" placeholder=\"Name\" required>\n            <div *ngIf=\"name.touched && name.invalid\">\n              <div *ngIf=\"name.errors?.required\" class=\"text-danger\">Name is required</div>\n              <div *ngIf=\"name?.invalid && !name.errors?.required\" class=\"text-danger\">Invalid Name</div>\n            </div>\n          </div>\n\n          <div class=\"input-field\">\n            <input formControlName=\"email\" type=\"email\" placeholder=\"Email\" required>\n            <div *ngIf=\"email.touched && email.invalid\">\n              <div *ngIf=\"email.errors?.required\" class=\"text-danger\">Email is required</div>\n              <div *ngIf=\"email?.invalid && !email.errors?.required\" class=\"text-danger\">Invalid Email</div>\n            </div>\n          </div>\n\n          <div class=\"input-field\">\n            <input formControlName=\"password0\" type=\"password\" placeholder=\"Password\" required>\n            <div *ngIf=\"pass0.touched && pass0.invalid\">\n              <div *ngIf=\"pass0.errors?.required\" class=\"text-danger\">Password is required</div>\n              <div *ngIf=\"pass0.invalid && !pass0.errors?.required\" class=\"text-danger\">Password should be at least 5 characters</div>\n            </div>\n          </div>\n\n          <div class=\"input-field\">\n            <input formControlName=\"password\" type=\"password\" placeholder=\"Confirm Password\" required>\n            <div *ngIf=\"pass.touched && pass.invalid || pass.touched && signupForm.errors?.misMatch\">\n              <div *ngIf=\"pass.errors?.required\" class=\"text-danger\">Password is required</div>\n              <div *ngIf=\"signupForm.errors?.misMatch  && !pass.errors?.required\" class=\"text-danger\">Passwords do not Match</div>\n            </div>\n          </div>\n\n          <div class=\"input-field\">\n            <input formControlName=\"age\" type=\"number\" placeholder=\"age\" required>\n            <div *ngIf=\"age.errors?.required && age.touched\" class=\"text-danger\">Age is required</div>\n          </div>\n\n          <div class=\"input-field\">\n            <select id=\"Gender\" formControlName=\"gender\" required>\n              <option selected disabled hidden>Gender</option>\n              <option value=\"M\">Male</option>\n              <option value=\"F\">Female</option>\n            </select>\n            <div *ngIf=\"gender.errors?.required && gender.touched\" class=\"text-danger\">Gender is required</div>\n          </div>\n\n          <div class=\"input-field\">\n            <input class=\"submit\" type=\"submit\" value=\"Submit\">\n          </div>\n\n        <!--//user data-->\n      </form>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { CreateRoutingModule} from './create-router.module';\r\nimport { UserDataModule } from './user-data/user-data.module';\r\n\r\n\r\nimport { CreateComponent } from './create-user/create.component';\r\n\r\nimport { LoginService } from '../services/login.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@NgModule({\r\n  declarations: [ CreateComponent ],\r\n  imports: [ CommonModule, FormsModule, ReactiveFormsModule, UserDataModule, CreateRoutingModule ],\r\n  exports: [ CreateComponent ],\r\n  providers: [ LoginService, DataService, CookieService ]\r\n})\r\nexport class CreateModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-data',\n  templateUrl: './user-data.component.html',\n  styleUrls: ['./user-data.component.scss']\n})\nexport class UserDataComponent implements OnInit {\n  userDataForm = {\n    height: null,\n    weight: null,\n    waist: null,\n    neck: null,\n    hip: null,\n    ankle: null,\n    wrist: null,\n    bType: {\n      ecto: null,\n      meso: null,\n      endo: null\n    },\n    bt: {\n      q1: null,\n      q2: null,\n      q3: null,\n      q4: null,\n      q5: null,\n      q6: null,\n      q7: null,\n      q8: null\n    }\n  };\n  isGuest: boolean;\n  message: string;\n  guest = {age: null, gender: ''};\n  constructor(\n    private lgn: LoginService,\n    private router: Router) {\n\n   }\n\n  ngOnInit(): void {\n    if (sessionStorage.getItem('token')){\n      this.isGuest = false;\n    }\n    else{\n      this.isGuest = true;\n    }\n  }\n  calc_bt(){\n    let ecto = 0;\n    let meso = 0;\n    let endo = 0;\n    const values = Object.values(this.userDataForm.bt);\n    values.forEach(element => {\n      if (element === 'A'){\n        ecto ++;\n      }\n      else if (element === 'B'){\n        meso ++;\n      }\n      else if (element === 'C'){\n        endo ++;\n      }\n    });\n    this.userDataForm.bType.ecto = ecto / 8 * 100;\n    this.userDataForm.bType.meso = meso / 8 * 100;\n    this.userDataForm.bType.endo = endo / 8 * 100;\n  }\n  addData(){\n    if (!sessionStorage.getItem('token')){\n      this.calc_bt();\n      sessionStorage.setItem('GuestData', JSON.stringify( Object.assign(this.guest, {data: this.userDataForm}) ));\n      this.router.navigate([`/stats`]);\n    }\n    else{\n      this.calc_bt();\n      delete this.userDataForm.bt;\n      this.lgn.datareg(this.userDataForm)\n        .subscribe(\n          res => {\n            if (res.message === 'success'){\n              this.router.navigate([`/stats`]);\n            }\n          },\n          err => {\n            this.message = 'Opps! Something went wrong!';\n          }\n        );\n        }\n  }\n}\n","<section id=\"userdata\">\n <div class=\"user-data\">\n  <form (ngSubmit)=\"addData()\" >\n    <div class=\"text-success\">\n      Input in fields those you wanna know\n    </div>\n    <!--BMI-->\n    <div class=\"BMI\">\n      <h5>BMI</h5>\n\n      <div class=\"input-field\">\n        <label>Height</label>\n        <input name=\"height\" [(ngModel)]=\"userDataForm.height\"  type=\"number\" placeholder=\"Height (in cm)\">\n      </div>\n\n      <div class=\"input-field\">\n        <label>Weight</label>\n        <input name=\"weight\" [(ngModel)]=\"userDataForm.weight\" type=\"number\" placeholder=\"Weight (in kg)\">\n      </div>\n\n    </div>\n    <!--//BMI-->\n    <!--BMr-->\n    <div class=\"BMR\">\n      <h5>BMR</h5>\n\n      <div class=\"input-field\" *ngIf=\"isGuest\">\n        <label>Age</label>\n        <input [(ngModel)]=\"guest.age\" [ngModelOptions]=\"{standalone: true}\" name=\"age\" type=\"number\" placeholder=\"age\">\n      </div>\n\n      <div class=\"input-field\" *ngIf=\"isGuest\">\n        <label>Gender</label>\n        <select id=\"Gender\" [(ngModel)]=\"guest.gender\" [ngModelOptions]=\"{standalone: true}\" name=\"gender\">\n        <option selected disabled hidden>Gender</option>\n        <option value=\"M\">Male</option>\n        <option value=\"F\">Female</option>\n        </select>\n      </div>\n\n      <div class=\"input-field\">\n        <label>Height</label>\n        <input name=\"height\" [(ngModel)]=\"userDataForm.height\" type=\"number\" placeholder=\"Height (in cm)\">\n      </div>\n\n      <div class=\"input-field\">\n        <label>Weight</label>\n        <input name=\"weight\" [(ngModel)]=\"userDataForm.weight\" type=\"number\" placeholder=\"Weight (in kg)\">\n      </div>\n\n    </div>\n    <!--//BMI-->\n    <!--bfp-->\n    <div class=\"BFP\">\n      <h5>Body Fat Percentage</h5>\n\n      <div class=\"input-field\" *ngIf=\"isGuest\">\n        <label>Gender</label>\n        <select id=\"Gender\" [(ngModel)]=\"guest.gender\" [ngModelOptions]=\"{standalone: true}\" name=\"gender\">\n        <option selected disabled hidden>Gender</option>\n        <option value=\"M\">Male</option>\n        <option value=\"F\">Female</option>\n        </select>\n      </div>\n\n      <div class=\"input-field\">\n        <label>Height</label>\n        <input name=\"height\" [(ngModel)]=\"userDataForm.height\" type=\"number\" placeholder=\"Height (in cm)\">\n      </div>\n\n      <div class=\"input-field\">\n        <label>Waist</label>\n        <input name=\"waist\" [(ngModel)]=\"userDataForm.waist\" type=\"number\" placeholder=\"Waist (in cm)\">\n      </div>\n\n      <div class=\"input-field\">\n        <label>Neck</label>\n        <input name=\"neck\" [(ngModel)]=\"userDataForm.neck\" type=\"number\" placeholder=\"Neck (in cm)\">\n      </div>\n\n      <div class=\"input-field\">\n        <label>Hip</label>\n        <input name=\"hip\" [(ngModel)]=\"userDataForm.hip\" type=\"number\" placeholder=\"Hip  (in cm)\">\n      </div>\n\n    </div>\n    <!--//bfp-->\n    <!--MMM-->\n    <div class=\"MMM\">\n      <h5>Maximum Muscle Mass Naturally</h5>\n\n      <div class=\"input-field\">\n        <label>Height</label>\n        <input name=\"height\" [(ngModel)]=\"userDataForm.height\" type=\"number\" placeholder=\"Height (in cm)\">\n      </div>\n      <!--- for bfp-->\n      <div class=\"input-field\">\n        <label>Waist</label>\n        <input name=\"waist\" [(ngModel)]=\"userDataForm.waist\" type=\"number\" placeholder=\"Waist (in cm)\">\n      </div>\n      <!--- for bfp-->\n      <div class=\"input-field\">\n        <label>Neck</label>\n        <input name=\"neck\" [(ngModel)]=\"userDataForm.neck\" type=\"number\" placeholder=\"Neck (in cm)\">\n      </div>\n      <!--- for bfp-->\n      <div class=\"input-field\">\n        <label>Hip</label>\n        <input name=\"hip\" [(ngModel)]=\"userDataForm.hip\" type=\"number\" placeholder=\"Hip  (in cm)\">\n      </div>\n\n      <div class=\"input-field\">\n        <label>Ankle</label>\n        <input name=\"ankle\" [(ngModel)]=\"userDataForm.ankle\" type=\"number\" placeholder=\"Ankle (in cm)\">\n      </div>\n\n      <div class=\"input-field\">\n        <label>Wrist</label>\n        <input name=\"wrist\" [(ngModel)]=\"userDataForm.wrist\" type=\"number\" placeholder=\"Wrist (in cm)\">\n      </div>\n\n    </div>\n    <!--//mmm-->\n    <!--Body Type-->\n    <div class=\"Btype\">\n      <h5>Your Body type</h5>\n\n      <div class=\"input-field\">\n        <label>Your shoulders are</label>\n        <select [(ngModel)]=\"userDataForm?.bt.q1\" name=\"q1\">\n          <option selected disabled hidden>Select</option>\n          <option value=\"A\">narrower than your hips</option>\n          <option value=\"B\">same with than your hips</option>\n          <option value=\"C\">wider than your hips</option>\n        </select>\n      </div>\n\n      <div class=\"input-field\">\n        <label>Fitted jeans generally feel</label>\n        <select [(ngModel)]=\"userDataForm?.bt.q2\" name=\"q2\">\n          <option selected disabled hidden>Select</option>\n          <option value=\"A\">loose around your butt</option>\n          <option value=\"B\">snug, but not too tight around your butt</option>\n          <option value=\"C\">tight around your butt</option>\n        </select>\n      </div>\n\n      <div class=\"input-field\">\n        <label>Your forearms are on the</label>\n        <select [(ngModel)]=\"userDataForm?.bt.q3\" name=\"q3\">\n          <option selected disabled hidden>Select</option>\n          <option value=\"A\">smallish side</option>\n          <option value=\"B\">moderately thick</option>\n          <option value=\"C\">thicker side</option>\n        </select>\n      </div>\n\n      <div class=\"input-field\">\n        <label>Your body tends to</label>\n        <select [(ngModel)]=\"userDataForm?.bt.q4\" name=\"q4\">\n          <option selected disabled hidden>Select</option>\n          <option value=\"A\">stay skinny</option>\n          <option value=\"B\">stay lean, yet somewhat muscular</option>\n          <option value=\"C\">carry extra fat</option>\n        </select>\n      </div>\n\n      <div class=\"input-field\">\n        <label>Your body looks</label>\n        <select [(ngModel)]=\"userDataForm?.bt.q5\" name=\"q5\">\n          <option selected disabled hidden>Select</option>\n          <option value=\"A\">long and narrow</option>\n          <option value=\"B\">rugged and squarish in shape</option>\n          <option value=\"C\">round and soft</option>\n        </select>\n      </div>\n\n      <div class=\"input-field\">\n        <label>If you grip your wrist between your thumb and middle finger, the 2 fingers</label>\n        <select [(ngModel)]=\"userDataForm?.bt.q6\" name=\"q6\">\n          <option selected disabled hidden>Select</option>\n          <option value=\"A\">overlap</option>\n          <option value=\"B\">just barely touch</option>\n          <option value=\"C\">don't touch</option>\n        </select>\n      </div>\n\n      <div class=\"input-field\">\n        <label>The circumference of your chest is</label>\n        <select [(ngModel)]=\"userDataForm?.bt.q7\" name=\"q7\">\n          <option selected disabled hidden>Select</option>\n          <option value=\"A\">37 inches or less</option>\n          <option value=\"B\">between 37-44 inches</option>\n          <option value=\"C\">over 44 inches</option>\n        </select>\n      </div>\n\n      <div class=\"input-field\">\n        <label>You can gain weight – both in terms of muscle and fat</label>\n        <select [(ngModel)]=\"userDataForm?.bt.q8\" name=\"q8\">\n          <option selected disabled hidden>Select</option>\n          <option value=\"A\">with difficult</option>\n          <option value=\"B\">gain or lose weight without too many issues</option>\n          <option value=\"C\">eaisly</option>\n        </select>\n      </div>\n\n    </div>\n    <!--//body type-->\n\n    <div class=\"input-field\">\n      <input class=\"submit\" type=\"Submit\" value=\"Submit\">\n    </div>\n\n  </form>\n </div>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { LoginService } from '../../services/login.service';\r\nimport { UserDataComponent } from './user-data.component';\r\n\r\n@NgModule({\r\n  declarations: [ UserDataComponent ],\r\n  imports: [ CommonModule, FormsModule ],\r\n  exports: [ UserDataComponent ],\r\n  providers: [ LoginService ]\r\n})\r\nexport class UserDataModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hero',\n  templateUrl: './hero.component.html',\n  styleUrls: ['./hero.component.scss']\n})\nexport class HeroComponent implements OnInit {\n  buttonText: string;\n  buttonUrl: string;\n  constructor(private router: Router) {\n    this.routeCheck();\n  }\n\n  ngOnInit(): void {\n  }\n  routeCheck(){\n    if (this.router.url === '/home'){\n      this.buttonText = 'Get Started';\n      this.buttonUrl = '/signin';\n    }\n    else{\n      this.buttonText = 'Statistics';\n      this.buttonUrl = '/stats#stats';\n    }\n  }\n}\n","<section id=\"hero\">\n<div class=\"bg-blk\">\n\n  <div class=\"container\">\n  <div class=\"hero-cont\">\n  <h1 class=\"hero-txt\"><span>One place</span><br>for all your body<br>statistics</h1>\n  <a *ngIf=\"buttonText === 'Statistics'\" routerLink=\"{{buttonUrl}}\"><button>{{ buttonText }}</button></a>\n  <button *ngIf=\"buttonText !== 'Statistics'\"  data-toggle=\"modal\" data-target=\"#buttonGetStarted\">Get Started</button>\n</div>\n  </div>\n  <div class=\"img-hero\"></div>\n\n  </div>\n</section>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"buttonGetStarted\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Get Started</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <button routerLink=\"../signin\" type=\"button\" data-dismiss=\"modal\">Sign In</button>\n        <button routerLink=\"../userdata\" type=\"button\" data-dismiss=\"modal\">Guest</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'home', component: HomeComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-hero></app-hero>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeRoutingModule } from './home-routing.module';\n\nimport { HomeComponent } from './home.component';\nimport { HeroComponent } from './hero/hero.component';\n\n\n\n\n@NgModule({\n  declarations: [HomeComponent, HeroComponent ],\n  imports: [ CommonModule, HomeRoutingModule],\n  exports: [HomeComponent]\n})\nexport class HomeModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private messageSource = new BehaviorSubject(null);\n  currentMessage = this.messageSource.asObservable();\n  constructor() { }\n  changeMessage(message: any) {\n    this.messageSource.next(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from './data.service';\n\n@Injectable()\nexport class LoginService {\n  private regUrl = 'http://localhost:1234/api/';\n  constructor(private http: HttpClient) { }\n  getUserData(){\n    return this.http.get<any>(`${this.regUrl}stats`);\n  }\n  register(user: any){\n    return this.http.post<any>(`${this.regUrl}create`, user);\n  }\n  datareg(data: any){\n    return this.http.patch<any>(`${this.regUrl}userdata`, data);\n  }\n  login(data: any){\n    return this.http.post<any>(`${this.regUrl}login`, data);\n  }\n  forgot(data: any){\n    return this.http.post<any>(`${this.regUrl}forgot`, data);\n  }\n  changePassword(data: any){\n    return this.http.patch<any>(`${this.regUrl}change`, data);\n  }\n  showpage(){\n    if (sessionStorage.getItem('token') || sessionStorage.getItem('GuestData')){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n  StoredData: string;\n  constructor() {\n  }\n  intercept(req, next) {\n    this.StoredData = sessionStorage.getItem('token');\n    const tokenizedReq = req.clone({\n        setHeaders: {\n          authorisation: `Bearer ${this.StoredData}`\n        }\n    });\n    return next.handle(tokenizedReq);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function PasswordValidator(control: AbstractControl) {\r\n  const password = control.get('password');\r\n  const confirmPassword = control.get('password0');\r\n  return password && confirmPassword && password.value !== confirmPassword.value ? { misMatch: true } : null;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PasswordValidator } from 'src/app/shared/validator.pass';\n\n@Component({\n  selector: 'app-change-pass',\n  templateUrl: './change-pass.component.html',\n  styleUrls: ['./change-pass.component.scss']\n})\nexport class ChangePassComponent implements OnInit {\n  changeForm: FormGroup;\n  message: string;\n  password0: string;\n  get pass(){\n    return this.changeForm.get('password');\n  }\n  get pass0(){\n    return this.changeForm.get('password0');\n  }\n  constructor(private lgn: LoginService,\n              private route: ActivatedRoute,\n              private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.changeForm = this.fb.group({\n      password0: ['', [Validators.required, Validators.minLength(5)]],\n      password: ['', [Validators.required, Validators.minLength(5)]]\n    }, { validator: PasswordValidator });\n  }\n  submit() {\n    this.changeForm.markAllAsTouched();\n    if (this.changeForm.valid){\n      sessionStorage.setItem('token', this.route.snapshot.queryParams.crypt);\n      this.lgn.changePassword(this.changeForm.value)\n          .subscribe(\n            res => { if (res.message === 'err'){\n                        this.message = res.message;\n                      }\n                    },\n            err => {this.message = 'err'; }\n            );\n          }\n  }\n}\n","<section id=\"forgot\">\n  <div class=\"flex\">\n    <div class=\"center\">\n      <div *ngIf=\"message !== 'success'\">\n      <form [formGroup]=\"changeForm\" (ngSubmit)=\"submit()\">\n        <h1>Change Password</h1>\n\n        <p *ngIf=\"message\" class=\"text-danger\">Opps! Something went wrong!</p>\n        <input formControlName=\"password0\" placeholder=\"Password\" type=\"password\">\n        <div *ngIf=\"pass0.touched && pass0.invalid\">\n          <div *ngIf=\"pass0.errors?.required\" class=\"text-danger\">Password is required</div>\n          <div *ngIf=\"pass0.invalid && !pass0.errors?.required\" class=\"text-danger\">Password should be at least 5 characters</div>\n        </div>\n        <input formControlName=\"password\"  placeholder=\"Confirm Password\" type=\"password\">\n        <div *ngIf=\"pass.touched && pass.invalid || pass.touched && changeForm.errors?.misMatch\">\n          <div *ngIf=\"pass.errors?.required\" class=\"text-danger\">Password is required</div>\n          <div *ngIf=\"changeForm?.errors?.misMatch && !pass.errors?.required\" class=\"text-danger\">Passwords do not Match</div>\n        </div>\n\n        <input class=\"submit\" type=\"submit\" value=\"Change Password\">\n      </form>\n      </div>\n      <div *ngIf=\"message === 'success'\" class=\"message\">\n        <p>Your password has been changed.<br>\n          click here to go to <a routerLink='../'>Signin</a></p>\n      </div>\n    </div>\n  </div>\n  </section>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.scss']\n})\nexport class ForgotComponent implements OnInit {\n  forgotForm: FormGroup;\n  message: string;\n  get email(){\n    return this.forgotForm.get('email');\n  }\n  constructor(private lgn: LoginService, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.forgotForm = this.fb.group({\n      email: ['', [Validators.required, Validators.pattern('[^@]+@[^@]+\\.[a-zA-Z]{2,6}')]]\n    });\n  }\n\n  submit(){\n    this.forgotForm.markAllAsTouched();\n    if (this.forgotForm.valid){\n      this.lgn.forgot(this.forgotForm.value)\n        .subscribe(\n          res => {this.message = res.message; },\n          err => console.log(err)\n          );\n    }\n  }\n\n}\n","<section id=\"forgot\">\n<div class=\"flex\">\n  <div class=\"center\">\n    <div *ngIf=\"message !== 'done'\">\n    <form [formGroup]=\"forgotForm\" (ngSubmit)=\"submit()\">\n      <h1>Forgot Password</h1>\n      <p>Enter your email to continue</p>\n      <div class=\"text-danger\">{{ message }}</div>\n      <input formControlName=\"email\" placeholder=\"Email\" type=\"email\">\n      <div *ngIf=\"email.touched && email.invalid\">\n        <div *ngIf=\"email.errors?.required\" class=\"text-danger\">Email is required</div>\n        <div *ngIf=\"email?.invalid && !email.errors?.required\" class=\"text-danger\">Invalid Email</div>\n      </div>\n      <input (click)=\"email.markAsTouched()\" class=\"submit\" type=\"submit\">\n    </form>\n    </div>\n    <div *ngIf=\"message === 'done'\" class=\"message\">\n      <p>A link has been sent to your email to reset password please check  your email.<br>\n        click here to go to <a href='../../home'>Home page</a></p>\n    </div>\n  </div>\n</div>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SigninComponent } from './signin.component';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { ChangePassComponent } from './change-pass/change-pass.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'signin', component: SigninComponent },\r\n  {path: 'signin/forgot', component: ForgotComponent },\r\n  {path: 'signin/changepassword', component: ChangePassComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SigninRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../services/login.service';\nimport { FormGroup, FormBuilder, Validators, MinLengthValidator } from '@angular/forms';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n  loginForm: FormGroup;\n  message: string;\n  get email(){\n    return this.loginForm.get('email');\n  }\n  get pass(){\n    return this.loginForm.get('password');\n  }\n  constructor(private lgn: LoginService, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.pattern('[^@]+@[^@]+\\.[a-zA-Z]{2,6}')]],\n      password: ['', [Validators.required, Validators.minLength(5)]]\n    });\n  }\n  submit(){\n    this.loginForm.markAllAsTouched();\n    if (this.loginForm.valid){\n      this.lgn.login(this.loginForm.value)\n          .subscribe(\n            res => {\n                    this.message = res.message;\n                    sessionStorage.setItem('token', res.token);\n                  },\n            err => console.log('Error:' + JSON.stringify(err))\n          );\n    }\n  }\n}\n","<section id=\"login\">\n<div class=\"background\">\n<div class=\"container\">\n  <div class=\"row bg-black\">\n    <div class=\"col-lg-6 img\"><p>MuscleMedium</p></div>\n    <div class=\"col-lg-6 form\">\n      <h1>Sign In</h1>\n      <p>Please enter your username and password to signin</p>\n\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n        <span *ngIf=\"message\" class=\"text-danger\">{{ message }}</span>\n        <input formControlName=\"email\" type=\"email\" placeholder=\"Email\" />\n        <div *ngIf=\"email.touched && email.invalid\">\n          <div *ngIf=\"email.errors?.required\" class=\"text-danger\">Email is required</div>\n          <div *ngIf=\"email?.invalid && !email.errors?.required\" class=\"text-danger\">Invalid Email</div>\n        </div>\n\n        <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" />\n        <div *ngIf=\"pass.touched && pass.invalid\">\n          <div *ngIf=\"pass.errors?.required\" class=\"text-danger\">Password is required</div>\n          <div *ngIf=\"pass.invalid && !pass.errors?.required\" class=\"text-danger\">Password should be at least 5 characters</div>\n        </div>\n\n        <a routerLink=\"forgot\"><span class=\"text-secondary\">Forgot Password</span></a>\n\n        <p>Don't have an account? <a routerLink=\"/signup\">create account</a></p>\n\n        <input (click)=\"email.markAsTouched()\" type=\"submit\" class=\"submit\" value=\"Sign In\" />\n      </form>\n    </div>\n  </div>\n</div>\n</div>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { SigninRoutingModule } from './signin-router.module';\r\n\r\nimport { SigninComponent } from './signin.component';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { ChangePassComponent } from './change-pass/change-pass.component';\r\n\r\nimport { LoginService } from '../services/login.service';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@NgModule({\r\n  declarations: [ SigninComponent, ForgotComponent, ChangePassComponent ],\r\n  imports: [ CommonModule, ReactiveFormsModule, SigninRoutingModule ],\r\n  exports: [ SigninComponent ],\r\n  providers: [ LoginService, DataService ]\r\n})\r\nexport class SigninModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-full-data',\n  templateUrl: './full-data.component.html',\n  styleUrls: ['./full-data.component.scss']\n})\nexport class FullDataComponent implements OnInit {\n  user: any;\n  phy: string;\n  constructor(private dataService: DataService) {\n    this.dataService.currentMessage.subscribe(\n      data => {\n        if (data){\n\n          this.user = data;\n          this.phy = this.calc_physi(this.user.bfp, this.user.gender);\n\n        }\n      }\n    );\n  }\n  ngOnInit(): void {\n  }\n  calc_physi(bfp: number, g: string){\n    if (bfp && g){\n      if (g === 'M'){\n        if      ( bfp >= 2 && bfp < 6 ) { return 'Essestial Fat'; }\n        else if ( bfp >= 6 && bfp < 14 ) { return 'Athlete'; }\n        else if ( bfp >= 14 && bfp < 18 ) { return 'Fitness'; }\n        else if ( bfp >= 18 && bfp < 25 ) { return 'Average'; }\n        else if ( bfp >= 25) { return 'Obese'; }\n      }\n      else{\n        if      ( bfp >= 10 && bfp < 14 ) { return 'Essestial Fat'; }\n        else if ( bfp >= 14 && bfp < 21 ) { return 'Athlete'; }\n        else if ( bfp >= 21 && bfp < 25 ) { return 'Fitness'; }\n        else if ( bfp >= 25 && bfp < 32 ) { return 'Average'; }\n        else if ( bfp >= 32) { return 'Obese'; }\n      }\n    }\n    else{\n      return 'Unknown';\n    }\n  }\n\n}\n","<section id=\"fulldata\">\n  <!--bmi-->\n  <div class=\"block\">\n    <div class=\"img bmi\"></div>\n    <div class=\"disp\">\n        <h3 class=\"heading\">Body Mass Index (BMI)</h3>\n        <p class=\"cap\">Body mass index (BMI) is a measure of\n          body fat based on height and weight that\n          applies to adult men and women.</p>\n        <div class=\"flx\">\n            <div class=\"left\">Height {{ user?.data.height | number:'1.0-0' }} cm<br>Weight {{ user?.data.weight | number:'1.0-0' }} Kg</div>\n            <div class=\"right\">BMI {{ user?.bmi | number:'1.1-1' }}</div>\n        </div>\n        <p class=\"sub-cap\">\n          Underweight: BMI is less than 18.5<br>\n          Normal weight: BMI is 18.5 to 24.9<br>\n          Overweight: BMI is 25 to 29.9<br>\n          Obese: BMI is 30 or more<br>\n        </p>\n    </div>\n  </div>\n<!--bmr-->\n<div class=\"block\">\n  <div class=\"disp\">\n      <h3 class=\"heading\">Basal Metabolic Rate (BMR)</h3>\n      <p class=\"cap\">Your BMR is the amount of energy expended to keep your body functioning at rest.</p>\n      <div class=\"flx\">\n          <div class=\" bmr-font\">BMR {{ user?.bmr | number:'1.0-0' }}<br>Calories/Day</div>\n      </div>\n      <p class=\"sub-cap\">\n        Age {{ user?.age | number:'1.0-0' }} years<br>\n        Gender <span *ngIf=\"user?.gender === 'M'\">Male</span> <span *ngIf=\"user?.gender === 'F'\">Female</span> <br>\n        Height {{ +user?.data.height | number:'1.0-0' }} cm<br>\n        Weight {{ +user?.data.weight | number:'1.0-0' }} Kg<br>\n      </p>\n  </div>\n  <div class=\"img bmr\"></div>\n</div>\n<!--bfp-->\n<div class=\"block\">\n  <div class=\"img bfp\"></div>\n  <div class=\"disp\">\n      <h3 class=\"heading\">Body Fat Percentage (BFP)</h3>\n      <p class=\"cap\">The body fat percentage is the ratio of total mass of fat to total body mass in percentage. Body fat includes essential body fat and storage body fat.</p>\n      <div class=\"flx\">\n          <div class=\"left\">Physique Category<br>{{ phy }}</div> <div class=\"right\">BFP {{ user?.bfp | number:'1.1-1' }}</div>\n      </div>\n        <table class=\"sub-cap bfp-table\">\n          <tr class=\"bolder\">  <td>Description</td> <td>Women</td> <td>Men</td> </tr>\n          <tr>  <td>Essential Fat</td>      <td>10-13%</td>  \t  <td>2-5%</td>   </tr>\n          <tr>  <td>Athletes</td>           <td>14-20%</td>    \t<td>6-13% </td>\t</tr>\n          <tr>  <td>Fitness</td>            <td>21-24%</td>     <td>14-17%</td> </tr>\n          <tr>  <td>Average</td>          \t<td>25-31%</td>     <td>18-25%</td> </tr>\n          <tr>  <td>Obese</td>\t            <td>32+%</td>       <td>25+%</td>  \t</tr>\n        </table>\n  </div>\n</div>\n<!--bc-->\n<div class=\"block\">\n  <div class=\"disp\">\n      <h3 class=\"heading\">Body Composition</h3>\n      <p class=\"cap\">Fat mass (FM) is the amount of fat in your body including essential fats and stored fat.\n        Lean body mass (LBM) include muscle mass and weight of other organs and bones.</p>\n      <div class=\"flx\">\n            <table>\n              <tr>    <td class=\"bc-table\">Fat Mass</td>           <td class=\"bolder\">{{ user?.fm | number:'1.1-1' }} KG</td></tr>\n              <tr>    <td class=\"bc-table\">Lean Body Mass</td>     <td class=\"bolder\">{{ user?.lbm | number:'1.1-1' }} KG</td></tr>\n              <tr>    <td class=\"bc-table\">Total Body Mass</td><td class=\"bolder\">{{ user?.data.weight | number:'1.1-1' }} KG</td></tr>\n            </table>\n      </div>\n   </div>\n   <div class=\"img bc\"></div>\n </div>\n <!--mmg-->\n<div class=\"block\">\n  <div class=\"img mmg\"></div>\n  <div class=\"disp\">\n      <h3 class=\"heading\">Max Mass Gain (Naturally)</h3>\n      <p class=\"cap\">It gives you the information about your body potential of maximum muscle mass you can put on without using any drug.</p>\n        <div class=\"mmg-top grey\"> Body Weight<br> <span class=\"bolder white\">{{ user?.data.weight | number:'1.0-0' }} KG</span> at {{ user?.bfp | number:'1.1-1' }}% BF\n        </div>\n        <div class=\"mmg-bottom grey\">\n          Max Body Weight<br> <span class=\"bolder\">{{ user?.mmn | number:'1.0-0'  }} KG</span> at {{ user?.bfp | number:'1.1-1'  }}% BF\n        </div>\n   </div>\n </div>\n</section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-personal-info',\n  templateUrl: './personal-info.component.html',\n  styleUrls: ['./personal-info.component.scss']\n})\nexport class PersonalInfoComponent implements OnInit {\n  user: any;\n  barM = {\n    p: {per: 0, cal: 0 , wt: 0},\n    c: {per: 0, cal: 0 , wt: 0},\n    f: {per: 0, cal: 0 , wt: 0}\n  };\n  constructor(private dataService: DataService) {\n    this.dataService.currentMessage.subscribe(\n      data => {\n        if (data){\n        this.user = data;\n        this.calc_bar_maintain(this.user.data.weight, this.user.bmr);\n        }\n      }\n    );\n  }\n\n  ngOnInit(): void {\n  }\n  calc_bar_maintain(wt: number, TotalCal: number){\n    if (wt && TotalCal){\n      this.barM.p.wt = wt * 2.20462 * 1;\n      this.barM.p.cal =  wt * 2.20462 * 4;\n      this.barM.f.cal = TotalCal * 20 / 100;\n      this.barM.c.cal = TotalCal - this.barM.p.cal - this.barM.f.cal;\n      this.barM.f.wt = this.barM.f.cal / 9;\n      this.barM.c.wt = this.barM.c.cal / 4;\n      this.barM.p.per = this.barM.p.cal / TotalCal;\n      this.barM.c.per = this.barM.c.cal / TotalCal;\n      this.barM.f.per = 0.20; // percent pipe takes decimal values\n    }\n    else{\n      this.barM = {\n        p: {per: .33, cal: 0 , wt: 0},\n        c: {per: .33, cal: 0 , wt: 0},\n        f: {per: .33, cal: 0 , wt: 0}\n      };\n    }\n\n  }\n\n}\n","<section id=\"personalInfo\">\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-4\">\n      <img *ngIf=\"user?.bTypeMax && user.gender === 'M'\" src=\"{{ '../../../assets/img/' + user.bTypeMax + '.gif' }}\" alt=\"{{  user?.bTypeMax  }}\">\n      <img *ngIf=\"user?.bTypeMax && user.gender === 'F'\" src=\"{{ '../../../assets/img/' + user.bTypeMax + 'F.gif' }}\" alt=\"{{ user?.bTypeMax }}\">\n      <img *ngIf=\"user?.bTypeMax === 'Unknown'\" src=\"../../../assets/img/Mesomorph.gif\" alt=\"unknown\">\n    </div>\n    <div class=\"col-lg-8 info-data\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <h1 *ngIf='user?.bTypeMax'><span class=\"bolder\">Your body type</span> is<br>{{ user.bTypeMax }}</h1>\n            <p *ngIf=\"user?.bTypeMax === 'Ectoomorph'\">Ectomorph's have a light build with small joints and lean muscle. Usually\n               they have long thin limbs with stringy muscles. Shoulders tend to be thin with little width.</p>\n            <p *ngIf=\"user?.bTypeMax === 'Mesomorph'\">A mesomorph has a large bone structure, large muscles and a naturally athletic physique. They find it quite easy\n              to gain and lose weight. They are naturally strong.</p>\n            <p *ngIf=\"user?.bTypeMax === 'Endomorph'\">The Endomorph body type is solid and generally soft. Endomorphs gain fat very easily. They are usually of a\n              shorter build with thick arms and legs. Muscles are strong, especially the upper legs.</p>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 mt-5\">\n          <h2>Optimum Macros Ratio to Maintain Body Composition</h2>\n          <div class=\"tab\">\n            <div class=\"p\" [style.width.%]=\"barM.c.per*100\"><span class=\"bolder\">Protein {{ barM.p.per | percent }}</span><br>{{ barM.p.cal | number:'1.0-0' }}Kcal<br>{{ barM.p.wt | number:'1.0-0' }}g</div>\n            <div class=\"c\" [style.width.%]=\"barM.c.per*100\"><span class=\"bolder\">Carb {{ barM.c.per | percent }}</span><br>{{ barM.c.cal | number:'1.0-0' }}Kcal<br>{{ barM.c.wt | number:'1.0-0' }}g</div>\n            <div class=\"f\" [style.width.%]=\"barM.f.per*100\"><span class=\"bolder\">Fat {{ barM.f.per | percent }}</span><br>{{ barM.f.cal | number:'1.0-0' }}Kcal<br>{{ barM.f.wt | number:'1.0-0' }}g</div>\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n  </div>\n</div>\n\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { StatisticsComponent } from './statistics.component';\r\nimport { AuthGuard } from '../auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'stats', component: StatisticsComponent, canActivate: [AuthGuard] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StatisticsRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n  userFull: any;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-home></app-home>\n<app-stats></app-stats>\n<app-full-data></app-full-data>\n<app-personal-info></app-personal-info>\n<app-contact-us></app-contact-us>\n<app-about-us></app-about-us>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StatisticsRoutingModule } from './statistics-routing.module';\n\nimport { StatisticsComponent } from './statistics.component';\nimport { StatsComponent } from './stats/stats.component';\nimport { FullDataComponent } from './full-data/full-data.component';\nimport { PersonalInfoComponent } from './personal-info/personal-info.component';\nimport { HomeModule } from '../home/home.module';\nimport { AboutUsComponent } from '../about-us/about-us.component';\nimport { ContactUsComponent } from '../contact-us/contact-us.component';\n\n\n\n\n\n@NgModule({\n  declarations: [ StatisticsComponent,\n                  StatsComponent,\n                  FullDataComponent,\n                  PersonalInfoComponent,\n                  AboutUsComponent,\n                  ContactUsComponent\n                ],\n  imports: [ CommonModule, HomeModule, StatisticsRoutingModule ],\n  exports: [ StatisticsComponent ]\n})\nexport class StatisticsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit {\n  user: any;\n\n  constructor(private lgn: LoginService, private dataService: DataService) {\n    if (!sessionStorage.getItem('token')){\n      this.user = JSON.parse(sessionStorage.getItem('GuestData'));\n\n    }\n    else{\n      lgn.getUserData().subscribe(\n                                  res => {\n                                    this.user = res.data;\n                                    // this.user.bmi = this.calc_bmi(this.user.data.weight, this.user.data.height);\n                                    // // tslint:disable-next-line: max-line-length\n                                    // this.user.bmr = this.calc_bmr(this.user.gender, this.user.age, this.user.data.weight, this.user.data.height);\n                                    // // tslint:disable-next-line: max-line-length\n                                    // this.user.bfp = this.calc_bfp_navy(this.user.gender, this.user.data.waist, this.user.data.hip, this.user.data.neck, this.user.data.height);\n                                    // this.user.fm = this.user.data.weight * this.user.bfp / 100;\n                                    // // tslint:disable-next-line: max-line-length\n                                    // this.user.mmn = this.calc_mmn(this.user.data.height, this.user.data.ankle, this.user.data.wrist, this.user.bfp);\n                                    // this.user.lbm = this.calc_lbm(this.user.data.weight, this.user.fm);\n                                    // this.user.bTypeMax = this.calc_btype(this.user.data.bType);\n                                    // this.dataService.changeMessage(this.user);\n                                  },\n                                  err => console.log(JSON.stringify(err))\n                                  );\n    }\n  }\n\n  ngOnInit() {\n    this.user.bmi = this.calc_bmi(this.user.data.weight, this.user.data.height);\n    // tslint:disable-next-line: max-line-length\n    this.user.bmr = this.calc_bmr(this.user.gender, this.user.age, this.user.data.weight, this.user.data.height);\n    // tslint:disable-next-line: max-line-length\n    this.user.bfp = this.calc_bfp_navy(this.user.gender, this.user.data.waist, this.user.data.hip, this.user.data.neck, this.user.data.height);\n    this.user.fm = this.user.data.weight * this.user.bfp / 100;\n    // tslint:disable-next-line: max-line-length\n    this.user.mmn = this.calc_mmn(this.user.data.height, this.user.data.ankle, this.user.data.wrist, this.user.bfp);\n    this.user.lbm = this.calc_lbm(this.user.data.weight, this.user.fm);\n    this.user.bTypeMax = this.calc_btype(this.user.data.bType);\n    this.dataService.changeMessage(this.user);\n  }\n  calc_bmi(weight: number, height: number){\n    if (weight && height){\n    return (weight * 10000) / (height * height);\n    }\n    else{\n      return 0;\n    }\n  }\n  calc_bmr(gender, age, weight, height){\n    if (weight && height && age && gender){\n      if (gender === 'M'){\n      return (10 * weight) + (6.25 * height) - (5 * age) + 5;\n      }\n      else{\n        return (10 * weight) + (6.25 * height) - (5 * age) - 161;\n      }\n    }\n    else{\n      return 0;\n    }\n  }\n  calc_lbm(wt, fm){\n    if (wt && fm){\n      return wt - fm;\n    }\n    else{\n      return 0;\n    }\n  }\n  calc_bfp_navy(gender, waist, hip, neck, height){\n    if (waist && neck && height && hip && gender){\n      (gender === 'F') ? waist = waist + hip : waist = waist;\n      const x = Math.log10(waist - neck);\n      const z = Math.log10(height);\n      let y: number;\n      if (gender === 'M')\n      {\n        y =  1.0324 - (0.19077 * x )  + (0.15456 * z);\n      }\n      else{\n        y =  1.29579 - (0.35004 * x )  + (0.22100 * z);\n      }\n      return 495 / y - 450;\n    }\n    else{\n      return 0;\n    }\n  }\n  calc_mmn(height, ankle, wrist, bfp ){\n    if (height && ankle && wrist && bfp){\n      const res =  Math.pow((height * 0.393701), 1.5) *\n                 (Math.sqrt(wrist * 0.393701) / 22.667 + Math.sqrt(ankle * 0.393701) / 17.0104) *\n                  ((bfp / 224) + 1);\n      return (res * 0.453592) * 100 / (100 - bfp);\n    }\n    else{\n      return 0;\n    }\n   }\n   calc_btype(data: any){\n    if (data.ecto + data.meso + data.endo !== 0){\n      if (data.ecto > data.meso){\n        return 'Ectomorph';\n      }\n      else if (data.endo > data.meso){\n        return 'Endomorph';\n      }\n      else{\n        return 'Mesomorph';\n      }\n    }\n    else{\n      return 'Unknown';\n    }\n   }\n\n}\n","<section id=\"stats\">\n<div *ngIf=\"user\" class=\"contain\">\n <h4 class=\"text-center\">Statistcs</h4>\n <h2 class=\"text-center\"><span class=\"head-txt-bold\">Amazing place to see your<br>\n  current </span>fitness status</h2>\n\n  <!--grid-->\n\n  <div class=\"grid\">\n    <!--img-->\n    <div class=\"box img\">\n      <img *ngIf=\"user?.bTypeMax && user.gender === 'M'\" src=\"{{ '../../../assets/img/' + user.bTypeMax + '.gif' }}\" alt=\"{{  user?.bTypeMax  }}\">\n      <img *ngIf=\"user?.bTypeMax && user.gender === 'F'\" src=\"{{ '../../../assets/img/' + user.bTypeMax + 'F.gif' }}\" alt=\"{{ user?.bTypeMax }}\">\n      <img *ngIf=\"user?.bTypeMax === 'Unknown'\" src=\"../../../assets/img/Mesomorph.gif\" alt=\"unknown\">\n    </div>\n    <!--left panel-->\n    <div class=\"box\">\n\n        <div class=\"data\">\n            <div class=\"data-desc\">\n                <h5>BMI</h5>\n                <p>Body mass index (BMI) is a measure of\n                  body fat based on height and weight that\n                  applies to adult men and women.</p>\n            </div>\n            <div class=\"data-val\">{{ user.bmi | number:'1.1-1' }}</div>\n        </div>\n\n        <div class=\"data\">\n          <div class=\"data-desc\">\n              <h5>BMR</h5>\n              <p>Your BMR is the amount of energy expended to keep your body functioning at rest.</p>\n          </div>\n          <div class=\"data-val\">{{ user.bmr | number:'1.0-0' }}</div>\n      </div>\n\n      <div class=\"data\">\n        <div class=\"data-desc\">\n            <h5>BFP</h5>\n            <p>The body fat percentage is the ratio of total mass of fat to total body mass in percentage.</p>\n        </div>\n        <div class=\"data-val\">{{ user.bfp | number:'1.1-1' }}</div>\n    </div>\n\n    </div>\n    <!--right panel-->\n    <div class=\"box\">\n\n      <div class=\"data\">\n          <div class=\"data-desc\">\n              <h5>Lean Body Mass</h5>\n              <p>Lean Body Mass include muscle mass and weight of other organs and bones.</p>\n          </div>\n          <div class=\"data-val\">{{ user?.lbm | number:'1.1-1' }}</div>\n      </div>\n\n      <div class=\"data\">\n        <div class=\"data-desc\">\n            <h5>Max Mass Naturally</h5>\n            <p>It gives you the information about your body potential of maximum muscle mass you can put on without using any drug.</p>\n        </div>\n        <div class=\"data-val\">{{ user.mmn | number: '1.1-1' }}</div>\n    </div>\n\n    <div class=\"data\">\n      <div class=\"data-desc\">\n          <h5>Fat Mass</h5>\n          <p>Fat mass (FM) is the amount of fat in your body including essential fats and stored fat.</p>\n      </div>\n      <div class=\"data-val\">{{ user.fm | number: '1.1-1' }}</div>\n    </div>\n\n   </div>\n\n  </div><!--//grid-->\n  <div class=\"box-bottom\">\n    <div class=\"data\">\n      <div >\n          <h5>Body Type</h5>\n          <p><span class=\"fnt-size\">{{ user.bTypeMax }}</span><br>Body mass index (BMI) is a measure of body fat based on height and weight that applies to adult men and women.</p>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}